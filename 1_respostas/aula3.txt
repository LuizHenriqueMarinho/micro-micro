Dada uma variável a do tipo char (um byte), escreva os trechos de código em C para: (a) Somente setar o bit menos significativo de a. (b) Somente setar dois bits de a: o menos significativo e o segundo menos significativo. (c) Somente zerar o terceiro bit menos significativo de a. (d) Somente zerar o terceiro e o quarto bits menos significativo de a. (e) Somente inverter o bit mais significativo de a. (f) Inverter o nibble mais significativo de a, e setar o nibble menos significativo de a.

Considerando a placa Launchpad do MSP430, escreva o código em C para piscar os dois LEDs ininterruptamente.

Considerando a placa Launchpad do MSP430, escreva o código em C para piscar duas vezes os dois LEDs sempre que o usuário pressionar o botão.

Considerando a placa Launchpad do MSP430, faça uma função em C que pisca os dois LEDs uma vez.

Reescreva o código da questão 2 usando a função da questão 4.

Reescreva o código da questão 3 usando a função da questão 4.

questão 1: a) A |= BIT0;

b) A |= BIT0 + BIT1;

c) A |= BIT2;

d) A &=~ (BIT5 + BIT4);

e) A ~ BIT7;

f) a~(BIT7+BIT6+BIT5+BIT4); a|=(BIT3+BIT2+BIT1+BIT0);

Questão 2 #include <msp450g2553.h> #define LEDS=(BIT1 +BIT0)
#define BTN int main (void) { WDTCTL= WDTPW + WDTHOLD; PIOUT=0; PIDIR= LEDS; FOR(;;) { IF (BTN=1) { PIOUT|=LEDS; BTN=0;
} ELSE { PIOUT=~LEDS; BTN=1;
}
}

Questão 3 #include <msp450g2553.h> #define LEDS=(BIT1 +BIT0) /*(bitx + bity) / #define BTN=0 / AUXILIAR */ int main (void) { WDTCTL= WDTPW + WDTHOLD; PIOUT=0; PIDIR= LEDS; FOR(;;) { WHILE(P1IN & BTN < 4){ PIOUT~LEDS; BTN++; } BTN=O;

} }

Questão 4

#include <msp450g2553.h> #define LEDS=(BIT1+BIT0) /*(bitx + bity) / #define BTN=0 / AUXILIAR */ int main (void) { WDTCTL= WDTPW + WDTHOLD; PIOUT=0; PIDIR= LEDS; FOR(;;) { WHILE(BTN < 2){ PIOUT~LEDS; BTN++; }
} }

Questão 5 #include <msp450g2553.h> #define LEDS=(BIT1 +BIT0) /*(bitx + bity) / #define BTN=0 / AUXILIAR */ uma_vez () { WDTCTL= WDTPW + WDTHOLD; PIOUT=0; PIDIR= LEDS; FOR(;;) { WHILE(BTN < 2){ PIOUT~LEDS; BTN++; }
} } int main (void) { WDTCTL= WDTPW + WDTHOLD; BTN2=0; PIOUT=0; PIDIR= LEDS; FOR(;;) { WHILE(BTN2<2){ uma_vez () BTN2++; } }

Questão 6 #include <msp450g2553.h> #define LEDS = ( BIT1 + BIT0) #define BTN = 0

uma_vez() { WDTCTL= WDTPW + WDTHOLD; PIOUT=0; PIDIR= LEDS; FOR(;;) { WHILE(BTN < 2){ PIOUT~LEDS; BTN++; }
} } int main(void) WDTCTL= WDTPW + WDTHOLD; PIOUT=0; BTN2=0; PIDIR= LEDS; FOR(;;) { WHILE(P1IN & BTN2<2){ led_uma_vez (); BTN2++; } }
